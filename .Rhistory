?corrplot
library(caret)
?corrplot
install.packages(c("R6", "RcppArmadillo"))
shiny::runApp('GitHub/DataScienceCapstone')
## Task0-1
#load some libraries
library(plyr)
library(reshape2)
library(tm) #Text mining
library(SnowballC) #Provides wordStem()
library(RColorBrewer) #color palette
library(ggplot2)
library(magrittr)
library(Rgraphviz) #from bioconductor 0 install via - source("http://bioconductor.org/biocLite.R");biocLite("Rgraphviz")
library(wordcloud)
library(RWeka) # for doing the bigrams
## Task0-1
#load some libraries
library(plyr)
library(reshape2)
library(tm) #Text mining
library(SnowballC) #Provides wordStem()
library(RColorBrewer) #color palette
library(ggplot2)
library(magrittr)
library(Rgraphviz) #from bioconductor 0 install via - source("http://bioconductor.org/biocLite.R");biocLite("Rgraphviz")
library(wordcloud)
library(RWeka) # for doing the bigrams
## Task0-1
#load some libraries
library(plyr)
library(reshape2)
library(tm) #Text mining
library(SnowballC) #Provides wordStem()
library(RColorBrewer) #color palette
library(ggplot2)
library(magrittr)
library(Rgraphviz) #from bioconductor 0 install via - source("http://bioconductor.org/biocLite.R");biocLite("Rgraphviz")
library(wordcloud)
library(RWeka) # for doing the bigrams
install.packages(c("car", "sjPlot"))
script.dir <- dirname(sys.frame(1)$ofile)
sample(1:5, replace=F)
sample(1:16, replace=F)
sample(1:64, replace=F)
rep(sample(1:64, replace=F), 4)
?sequence
g(2, 1, 10)
gl(2, 1, 10)
gl(2, 8, labels = c("c", "t"))
gl(8, 64, labels = c(1, 2, 3, 4, 5, 6, 7, 8))
library(tm)
load("~/GitHub/DataScienceCapstone/ngramtables.rdata")
shiny::runApp('GitHub/DataScienceCapstone/shinyApp')
shiny::runApp('GitHub/DataScienceCapstone/shinyApp')
workingdir<-paste("C:\\Users", Sys.getenv("USERNAME"), "Documents\\GitHub\\YACensusData", sep = "\\")
setwd(workingdir)
listofzipfiles <- list.files(pattern=".zip")
i<-listofzipfiles[1]
zipdir <- tempfile()
dir.create(zipdir)
unzip(i, exdir = zipdir)
b<-strsplit(i, "\\.")
b<-b[[1]][1]
k<-0
list.files(path = zipdir, pattern=".csv")
pb<-txtProgressBar(1, length(listofzipfiles), style=3)
pbi<-0
for (i in listofzipfiles) {
pbi<-pbi+1
setTxtProgressBar(pb, pbi)
zipdir <- tempfile()
dir.create(zipdir)
unzip(i, exdir = zipdir)
b<-strsplit(i, "\\.")
b<-b[[1]][1]
k<-0
for (j in list.files(path = zipdir, pattern=".csv")){
k<-k+1
filestr = paste(b,j, sep="_")
assign(filestr,read.csv(paste(zipdir,j, sep="\\")))
}
}
